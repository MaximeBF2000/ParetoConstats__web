var DecayAnimator = (function () {
    function DecayAnimator(options) {
        this.isComplete = false;
        this.updateOptions(options);
        var _a = this.options, power = _a.power, velocity = _a.velocity, modifyTarget = _a.modifyTarget, from = _a.from;
        var amplitude = power * velocity;
        var idealTarget = from + amplitude;
        var target = typeof modifyTarget === "undefined"
            ? idealTarget
            : modifyTarget(idealTarget);
        if (target !== idealTarget)
            amplitude = target - from;
        this.target = target;
        this.amplitude = amplitude;
    }
    DecayAnimator.prototype.flipTarget = function () { };
    DecayAnimator.prototype.update = function (t) {
        var _a = this.options, timeConstant = _a.timeConstant, restDelta = _a.restDelta;
        var delta = -this.amplitude * Math.exp(-t / timeConstant);
        this.isComplete = !(delta > restDelta || delta < -restDelta);
        return this.isComplete ? this.target : this.target + delta;
    };
    DecayAnimator.prototype.updateOptions = function (_a) {
        var _b = _a === void 0 ? {} : _a, _c = _b.velocity, velocity = _c === void 0 ? 0 : _c, _d = _b.from, from = _d === void 0 ? 0 : _d, _e = _b.power, power = _e === void 0 ? 0.8 : _e, _f = _b.timeConstant, timeConstant = _f === void 0 ? 350 : _f, _g = _b.restDelta, restDelta = _g === void 0 ? 0.5 : _g, modifyTarget = _b.modifyTarget;
        this.options = {
            velocity: velocity,
            from: from,
            power: power,
            timeConstant: timeConstant,
            restDelta: restDelta,
            modifyTarget: modifyTarget,
        };
    };
    DecayAnimator.needsInterpolation = function () { return false; };
    DecayAnimator.uniqueOptionKeys = new Set([
        "power",
        "timeConstant",
        "modifyTarget",
    ]);
    return DecayAnimator;
}());
export { DecayAnimator };
//# sourceMappingURL=decay.js.map